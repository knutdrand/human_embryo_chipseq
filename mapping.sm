key="../u1452@nelstor0.cbu.uib.no.key"

NELS="u1452@nelstor0.cbu.uib.no:/elixir-chr/nels/users/u1452/Projects/UiO_Dahl_Chromatin_2018/Adeel_ChIP-seq/GCF-2018-541/fastq/samples/AHFHMHBGX7/"

rule download_reference:
    output:
        "../../Data/{species}/{species}.fa.gz"
    shell:
        "wget http://hgdownload.soe.ucsc.edu/goldenPath/{wildcards.species}/bigZips/{wildcards.species}.fa.gz -O {output}"

rule index_bwa:
    input:
        "{fasta_path}.fa.gz"
    output:
        "{fasta_path}.fa.fai"
    shell:
        "bwa index {input}"

rule rat_all:
    input:
        expand("Rnor6/fragments/AM_{N}.bed", N=[446,447,454,455])


rule import_rat:
    output:
        temp("Rnor6/reads/{sample}_R{read}.fastq.gz")
    shell:
        "scp -i {key} {NELS}{wildcards.sample}_L000_R{wildcards.read}.fastq.gz {output}"


rule trim_adaptors:
    input:
        "{species}/reads/{name}_R1.fastq.gz",
        "{species}/reads/{name}_R2.fastq.gz"
    output:
        temp("{species}/trimmed_reads/{name}_R1.fastq.gz"),
        temp("{species}/trimmed_reads/{name}_R2.fastq.gz")
    threads: 16
    shell:
        'cutadapt --nextseq-trim=20 -m 10 -j {threads} -a "GATCGGAAGAGCACACGTCTGAACTCCAGTCAC" -A "AATGATACGGCGACCACCGAGATCTACAC" -o {output[0]} -p {output[1]} {input}'

rule bwa_map:
    input:
        "../data/{species}.fa.gz",
        "{species}/trimmed_reads/{name}_R1.fastq.gz",
        "{species}/trimmed_reads/{name}_R2.fastq.gz"
    output:
        temp("{species}/mapped_reads/{name}.bam"),
        "{species}/qc/{name}_R1_fastqz.html",
        "{species}/qc/{name}_R2_fastqz.html"
    threads: 16
    shell:
        """
        fastqc {input[1]} -o {wildcards.species}/qc/
        fastqc {input[2]} -o {wildcards.species}/qc/
        bwa mem -t {threads} {input} | samtools view -Sb - > {output[0]}
        """

rule filter_alignments:
    input:
        "{species}/mapped_reads/{name}.bam"
    output:
        "{species}/logs/{name}.flagstat",
        temp("{species}/filtered_alignments/{name}.bam")
    shell:
        """
	samtools flagstat {input} > {output[0]}
	samtools view -F 1804 -f 2 -q 30 -u  {input} > {output[1]}
	"""

rule fragment_bed:
    input:
        "{species}/filtered_alignments/{sample}.bam"
    output:
        "{species}/fragments/{sample}.bed"
    shell:
        "/usr/local/bin/macs2 randsample -i {input} -f BAMPE -p 100 -o {output}"
